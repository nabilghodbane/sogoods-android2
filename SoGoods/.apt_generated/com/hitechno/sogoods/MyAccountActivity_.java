//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.hitechno.sogoods;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.ToggleButton;
import com.hitechno.sogoods.R.id;
import com.hitechno.sogoods.R.layout;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class MyAccountActivity_
    extends MyAccountActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_my_account);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        requestWindowFeature(1);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static MyAccountActivity_.IntentBuilder_ intent(Context context) {
        return new MyAccountActivity_.IntentBuilder_(context);
    }

    public static MyAccountActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new MyAccountActivity_.IntentBuilder_(fragment);
    }

    public static MyAccountActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new MyAccountActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        m_ConfirmPasswordClear = ((ImageView) hasViews.findViewById(id.confirmPasswordClear));
        m_JobClear = ((ImageView) hasViews.findViewById(id.jobClear));
        m_JobsSpinner = ((Spinner) hasViews.findViewById(id.jobSpinner));
        m_Loading = ((ProgressBar) hasViews.findViewById(id.loading));
        m_LastNameClear = ((ImageView) hasViews.findViewById(id.lastNameClear));
        m_EMail = ((TextView) hasViews.findViewById(id.email));
        m_UserNameClear = ((ImageView) hasViews.findViewById(id.userNameClear));
        m_Picture = ((ImageView) hasViews.findViewById(id.picturePhoto));
        m_GenderClear = ((ImageView) hasViews.findViewById(id.genderClear));
        m_BirthDate = ((TextView) hasViews.findViewById(id.birthDate));
        m_UserName = ((EditText) hasViews.findViewById(id.userName));
        m_LastName = ((EditText) hasViews.findViewById(id.lastName));
        m_ConfirmPassword = ((EditText) hasViews.findViewById(id.confirmPassword));
        m_BirthDateClear = ((ImageView) hasViews.findViewById(id.birthDateClear));
        m_ShowBirthDate = ((ToggleButton) hasViews.findViewById(id.showBirthDay));
        m_FirstNameClear = ((ImageView) hasViews.findViewById(id.firstNameClear));
        m_ProgressPercent = ((TextView) hasViews.findViewById(id.progressPercent));
        m_CityClear = ((ImageView) hasViews.findViewById(id.cityClear));
        m_Password = ((TextView) hasViews.findViewById(id.password));
        m_City = ((TextView) hasViews.findViewById(id.city));
        m_FirstName = ((EditText) hasViews.findViewById(id.firstName));
        m_PasswordClear = ((ImageView) hasViews.findViewById(id.passwordClear));
        m_EMailClear = ((ImageView) hasViews.findViewById(id.emailClear));
        m_Save = ((TextView) hasViews.findViewById(id.save));
        m_Gender = ((Spinner) hasViews.findViewById(id.genderSpinner));
        m_ShowUserName = ((ToggleButton) hasViews.findViewById(id.showUserName));
        m_FragmentsContainer = ((FrameLayout) hasViews.findViewById(id.fragmentsContainer));
        m_ProgressBar = ((ProgressBar) hasViews.findViewById(id.progressBar));
        {
            View view = hasViews.findViewById(id.save);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MyAccountActivity_.this.saveClick();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.cancel);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MyAccountActivity_.this.onCancelClick();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.city);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MyAccountActivity_.this.cityClick();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.birthDate);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MyAccountActivity_.this.birthDatePicker();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.picturePhoto);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MyAccountActivity_.this.pictureClick();
                    }

                }
                );
            }
        }
        init();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  0 :
                MyAccountActivity_.this.takePictureResult(resultCode, data);
                break;
            case  1 :
                MyAccountActivity_.this.choosePictureResult(resultCode, data);
                break;
            case  2 :
                MyAccountActivity_.this.aviaryResult(resultCode, data);
                break;
        }
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, MyAccountActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, MyAccountActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, MyAccountActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public MyAccountActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

    }

}
